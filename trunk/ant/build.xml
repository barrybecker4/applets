<?xml version="1.0" encoding="UTF-8"?>
<project default="deploy" name="applets">
  <description>usage: ant {task}
  </description>

  <!-- enable or disable assertions when runnning. Should disable before formally releasing a new version. -->
  <property name="assertionsFlag" value="-disableassertions"/>
  <!-- place where compiled classes go. images and resources also get copied here -->
  <property name="classesDir" value="../classes"/>
  <!-- place where all original source files come from. -->
  <property name="sourceDir" value="../source"/>
  <!-- place where all process files for distribution go. -->
  <property name="distributionDir" value="../dist"/>
  <property name="distributionGameDir" value="${distributionDir}/games"/>
  <!-- place where all thirdparty libraries are located. -->
  <property name="libDir" value="../lib"/>
  <!-- place to put .class files, images and resources, so they can be jar'd up -->
  <property name="stagingDir" value="../temp/classes"/>
  <!-- root dir for auxillieary ant libraries -->
  <property name="antlibRoot" value="/usr/share"/>
  <!-- the base game applicaiton class -->
  <property name="gameAppClass" value="com.becker.game.common.ui.GameApp"/>
  <!-- the jvm to use when executing -->
  <property name="java_home" value="/usr/java/jdk1.5.0"/>
  <property name="java14" value="/usr/java/jdk1.4.2/bin/java"/>
  <property name="java15" value="${java_home}/bin/java"/>


  <!-- Load additional tasks -->
  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="${antlibRoot}/ant/lib/ant-contrib-0.6.jar"/>
    </classpath>
  </taskdef>

  <!-- source metrics
  <taskdef name="javancss" classname="javancss.JavancssAntTask" classpath="${antlibRoot}/javaNCSS/javancss21.41/lib"/>
   -->


  <path id="compile.classpath">
    <pathelement location="${libDir}/oalnf/oalnf.jar"/>
    <pathelement location="${libDir}/vecmath.jar"/>
    <pathelement location="${libDir}/sun.jar"/>
    <pathelement location="${libDir}/jai_codec.jar"/>
    <pathelement location="${libDir}/jnlp.jar"/>
    <pathelement location="${libDir}/junit.jar"/>
    <pathelement location="${libDir}/batik-awt-util.jar"/>
    <pathelement location="${libDir}/batik-bridge.jar"/>
    <pathelement location="${libDir}/batik-css.jar"/>
    <pathelement location="${libDir}/batik-dom.jar"/>
    <pathelement location="${libDir}/batik-ext.jar"/>
    <pathelement location="${libDir}/batik-extension.jar"/>
    <pathelement location="${libDir}/batik-gui-util.jar"/>
    <pathelement location="${libDir}/batik-gvt.jar"/>
    <pathelement location="${libDir}/batik-parser.jar"/>
    <pathelement location="${libDir}/batik-svg-dom.jar"/>
    <pathelement location="${libDir}/batik-svggen.jar"/>
    <pathelement location="${libDir}/batik-swing.jar"/>
    <pathelement location="${libDir}/batik-transcoder.jar"/>
    <pathelement location="${libDir}/batik-util.jar"/>
    <pathelement location="${libDir}/batik-xml.jar"/>
  </path>


  <target name="compile" depends="init" description="Compiles the source code">
    <javac debug="yes" deprecation="on" destdir="${classesDir}"
        nowarn="no" optimize="yes" srcdir="${sourceDir}" verbose="true"
        executable="${java_home}/bin/javac" compiler="modern" source="1.5">  
       <classpath refid="compile.classpath"/>
    </javac>
    <!-- use ant deploy to copy the resources to the classes dir -->

  </target>

  <target name="game metrics" depends="compile" description="calculate metrics (eg lines of code) for all the source files in the project">
    <javancss srcdir="${sourceDir}/com/becker/game" generateReport="true" outputfile="../performance/javancss_metrics1.txt" format="plain">
      <include name="**/*.java"/>
    </javancss>
  </target>


  <target name="clean" depends="init" description="Cleans out all the existing compiled classes and $(distributionDir}">
    <delete dir="${classesDir}"/>
    <delete dir="${distributionDir}"/>
    <ant antfile="rmi.xml" inheritall="true" target="rmi_clean"/>
  </target>

  <target name="init">
    <mkdir dir="${classesDir}"/>
    <mkdir dir="${distributionDir}"/>
    <mkdir dir="${distributionGameDir}"/>
    <ant antfile="rmi.xml" inheritall="true" target="rmi_init"/>
  </target>


  <target name="deploy" depends="compile"
      description="deploys the built jar files to the ${distributionDir} dir so they can be bulk copied to a website">
      <ant antfile="distribute.xml" inheritall="true" target="distribute">
          <property name="hello" value="test"/>
      </ant>
  </target>


  <target name="deployRMI" depends="compile"
      description="deploys rmi client and server stubs to ${rmiClientDir} and ${rmiServerDir} dirs">
      <ant antfile="rmi.xml" inheritall="true" target="deployRMIClient"/>
      <ant antfile="rmi.xml" inheritall="true" target="deployRMIServer"/>
  </target>


  <!--************** Tasks to execute programs ****************-->

  <target name="executeGalactic" description="Run the Galactic Empire program">
    <antcall target="executeProgram">
      <param name="className" value="${gameAppClass}"/>
      <param name="libPath" value="${libDir}/vecmath.jar;${libDir}/jai_codec.jar;"/>
      <param name="arg1" value="galactic"/>
    </antcall>
  </target>

  <target name="executePente" description="Run the pente program">
    <antcall target="executeProgram">
      <param name="className" value="${gameAppClass}"/>
      <param name="libPath" value="${libDir}/vecmath.jar;${libDir}/jai_codec.jar;"/>
      <param name="arg1" value="pente"/>
    </antcall>
  </target>

  <target name="executeBlockade" description="Run the blockade program">
    <antcall target="executeProgram">
      <param name="className" value="${gameAppClass}"/>
      <param name="libPath" value="${libDir}/vecmath.jar;${libDir}/jai_codec.jar;"/>
      <param name="arg1" value="blockade"/>
    </antcall>
  </target>

  <target name="executeCheckers" description="Run the checkers program">
    <antcall target="executeProgram">
      <param name="className" value="${gameAppClass}"/>
      <param name="libPath" value="${libDir}/vecmath.jar;${libDir}/jai_codec.jar;"/>
      <param name="arg1" value="checkers"/>
    </antcall>
  </target>

  <target name="executeChess" description="Run the chess program">
    <antcall target="executeProgram">
      <param name="className" value="${gameAppClass}"/>
      <param name="libPath" value="${libDir}/vecmath.jar;${libDir}/jai_codec.jar;"/>
      <param name="arg1" value="chess"/>
    </antcall>
  </target>

  <target name="executePoker" depends="compile" description=" run poker card game app">
    <antcall target="executeProgram">
      <param name="className" value="${gameAppClass}"/>
      <param name="libPath" value="${libDir}/vecmath.jar;${libDir}/jai_codec.jar;"/>
      <param name="arg1" value="poker"/>
    </antcall>
  </target>

  <target name="executeGo" description="Run the go program">
    <antcall target="executeProgram">
      <param name="className" value="${gameAppClass}"/>
      <param name="libPath" value="${libDir}/vecmath.jar;${libDir}/jai_codec.jar"/>
      <param name="arg1" value="go"/>
    </antcall>
  </target>

  <target name="executeColorMixer" description="Run the color mixer tool">
    <antcall target="executeProgram">
      <param name="className" value="com.becker.misc.colormixer.colormixer.ColorMixer"/>
    </antcall>
  </target>

  <target name="executeMaze" description="Run the maze generation program">
    <antcall target="executeProgram">
      <param name="className" value="com.becker.puzzle.maze.MazeSimulator"/>
    </antcall>
  </target>

  <target name="executeSnake" description="Run the Snake simulation program">
    <antcall target="executeProgram">
      <param name="className" value="com.becker.snake.SnakeApplet"/>
      <param name="libPath" value="${libDir}/vecmath.jar;${libDir}/jai_codec.jar"/>
    </antcall>
  </target>

  <target name="executeSpirograph" description="Run the SpiroGraph program">
    <antcall target="executeProgram">
      <param name="className" value="com.becker.spirograph.SpiroGraph"/>
      <param name="libPath" value="${libDir}/jai_codec.jar"/>
    </antcall>
  </target>

  <target name="executeLiquid" description="Run the Liquid simulator">
    <antcall target="executeProgram">
      <param name="className" value="com.becker.liquid.LiquidSimulator"/>
      <param name="libPath" value="${libDir}/vecmath.jar"/>
    </antcall>
  </target>

  <target name="executeRedPuzzle" depends="compile" description=" run the Red Puzzle simulator">
    <echo message="now executing red puzzle"/>
    <java classname="com.becker.puzzle.redpuzzle.RedPuzzle" classpath="${classesDir}" fork="true" jvm="${java15}" maxmemory="128M"/>
  </target>

  <target name="executeHiQPuzzle" depends="compile" description=" run the Hi-Q Puzzle simulator">
    <echo message="now executing Hi-Q"/>
    <java classname="com.becker.puzzle.hiq.HiQPuzzle" classpath="${classesDir}" fork="true" jvm="${java15}" maxmemory="128M"/>
  </target>

  <target name="XMLViewer" depends="compile" description=" run the XML Viewer app">
    <antcall target="executeProgram">
      <param name="className" value="com.becker.xml.DomEcho"/>
      <param name="libPath" value="${libDir}/vecmath.jar"/>
      <!--param name="arg1" value="/home/becker/projects/svg/svg_cagle_book/StopSign2.svg"/-->
      <param name="arg1" value="/home/becker/projects/java_projects/source/com/becker/xml/katate_dori.xml"/>
    </antcall>
  </target>

  <target name="XMLAppGenerator" depends="compile" description=" run the XML App Generator">
    <antcall target="executeProgram">
      <param name="className" value="com.becker.xml.AikidoAppGenerator"/>
      <param name="arg1" value="/home/becker/projects/java_projects/source/com/becker/xml/katate_dori.xml"/>
    </antcall>
  </target>


  <target name="showFonts" depends="compile">
    <java classname="com.becker.java2d.examples.ShowFonts" classpath="${classesDir}"/>
  </target>


  <!-- call this to run java programs -->
  <target name="executeProgram" depends="compile" description="Run a program">
    <java classname="${className}" classpath="${classesDir};${libPath}" fork="true" jvm="${java15}">
        <arg value="${arg1}"/>
        <jvmarg value="-Xms128M"/>
        <jvmarg value="-Xmx256M"/>
        <jvmarg value="${assertionsFlag}"/>
    </java>
  </target>







    <!-- this is from the threads book and should be deleted -->

    <target name="compile_threads">
        <javac compiler="javac1.5" source="1.5"
	    srcdir="${sourceDir}" destdir="${classesDir}"/>
    </target>


    <!-- Chapter 2 properties -->
    <property name="FactorialArg" value="10"/>

    <!-- Chapter 5 properties -->
    <property name="CalcThreadCount" value="10"/>

    <!-- Chapter 6 properties -->
    <property name="DeadlockTestNumber" value="2"/>

    <!-- Chapter 8 properties -->
    <property name="nConsumers" value="1"/>

    <!-- Chapter 9 properties -->
    <property name="nThreads" value="10"/>
    <property name="FibCalcValue" value="20"/>

    <!-- Chapter 10 properties -->
    <property name="ThreadPoolSize" value="5"/>

    <!-- Chapter 11 properties -->
    <property name="hostlist" value="http://www.ora.com/"/>

    <!-- Chapter 12 properties -->
    <property name="TypeServerHost" value="localhost"/>
    <property name="TypeServerPort" value="8003"/>
    <property name="TypeServerNThreads" value="10"/>
    <property name="CalcServerNThreads" value="5"/>
    <property name="CalcClientNThreads" value="10"/>
    <property name="CalcServerFibNumber" value="20"/>
    <property name="CalcServerHost" value="localhost"/>
    <property name="CalcServerPort" value="8003"/>

    <!-- Chapter 14 properties -->
    <!-- also uses nThreads -->
    <property name="nLoops" value="100000"/>

    <!-- Chapter 15 properties -->
    <!-- Also uses nThreads -->
    <property name="scaleLoops" value="200"/>
    <property name="nRows" value="1500"/>
    <property name="nCols" value="2000"/>
    <property name="classname" value="javathreads.examples.ch15.example10.Basic"/>

    <target name="ch2-ex1" depends="compile_threads">
        <java classpath="${classesDir}" classname="javathreads.examples.ch02.example1.Factorial">
            <arg value="${FactorialArg}"/>
        </java>
    </target>

    <target name="ch2-ex2" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch02.example2.SwingTypeTester">
        </java>
    </target>

    <target name="ch2-ex3" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch02.example3.SwingTypeTester">
        </java>
    </target>

    <target name="ch2-ex4" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch02.example4.SwingTypeTester">
        </java>
    </target>


    <target name="ch2-ex5" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch02.example5.SwingTypeTester">
        </java>
    </target>

    <target name="ch2-ex6" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch02.example6.SwingTypeTester">
        </java>
    </target>

    <target name="ch2-ex7" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch02.example7.SwingTypeTester">
        </java>
    </target>

    <target name="ch3-ex1" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch03.example1.SwingTypeTester">
        </java>
    </target>

    <target name="ch3-ex2" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch03.example2.SwingTypeTester">
        </java>
    </target>

    <target name="ch3-ex3" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch03.example3.SwingTypeTester">
        </java>
    </target>

    <target name="ch3-ex4" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch03.example4.SwingTypeTester">
        </java>
    </target>

    <target name="ch3-ex5" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch03.example5.SwingTypeTester">
        </java>
    </target>

    <target name="ch3-ex6" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch03.example6.SwingTypeTester">
        </java>
    </target>

    <target name="ch3-ex7" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch03.example7.SwingTypeTester">
        </java>
    </target>

    <target name="ch3-ex8" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch03.example8.SwingTypeTester">
        </java>
    </target>

    <target name="ch3-ex9" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch03.example9.SwingTypeTester">
        </java>
    </target>

    <target name="ch4-ex1" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch04.example1.SwingTypeTester">
        </java>
    </target>

    <target name="ch4-ex2" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch04.example2.SwingTypeTester">
        </java>
    </target>

    <target name="ch4-ex3" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch04.example3.SwingTypeTester">
        </java>
    </target>

    <target name="ch5-ex1" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch05.example1.SwingTypeTester">
        </java>
    </target>

    <target name="ch5-ex2" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch05.example2.SwingTypeTester">
        </java>
    </target>

    <target name="ch5-ex3" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch05.example3.SwingTypeTester">
        </java>
    </target>

    <target name="ch5-ex4" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch05.example4.CalculatorTest">
            <arg value="${CalcThreadCount}"/>
        </java>
    </target>

    <target name="ch6-ex1" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch06.DeadlockDetectingLock">
	    <arg value="${DeadlockTestNumber}"/>
        </java>
    </target>

    <target name="ch6-ex2" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch06.AlternateDeadlockDetectingLock">
	    <arg value="${DeadlockTestNumber}"/>
        </java>
    </target>

    <target name="ch7-ex1" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch07.example1.SwingTypeTester">
        </java>
    </target>

    <target name="ch7-ex2" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch07.example2.SwingTypeTester">
        </java>
    </target>

    <target name="ch7-ex3" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch07.example3.SwingTypeTester">
        </java>
    </target>

    <target name="ch8-ex1" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch08.example1.SwingTypeTester">
        </java>
    </target>

    <target name="ch8-ex2" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch08.example2.SwingTypeTester">
        </java>
    </target>

    <target name="ch8-ex3" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch08.example3.SwingTypeTester">
        </java>
    </target>

    <target name="ch8-ex4" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch08.example4.SwingTypeTester">
        </java>
    </target>

    <target name="ch8-ex5" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch08.example5.SwingTypeTester">
        </java>
    </target>

    <target name="ch8-ex6" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch08.example6.FibonacciTest">
            <arg value="${nConsumers}"/>
        </java>
    </target>

    <target name="ch9-ex1" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch09.example1.ThreadTest">
            <arg value="${nThreads}"/>
            <arg value="${FibCalcValue}"/>
        </java>
    </target>

    <target name="ch10-ex1" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch10.example1.ThreadPoolTest">
            <arg value="${nThreads}"/>
            <arg value="${FibCalcValue}"/>
            <arg value="${ThreadPoolSize}"/>
        </java>
    </target>

    <target name="ch10-ex2" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch10.example2.SingleThreadTest">
            <arg value="${nThreads}"/>
            <arg value="${FibCalcValue}"/>
        </java>
    </target>

    <target name="ch11-ex1" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch11.example1.URLMonitorPanel">
            <arg value="${hostlist}"/>
        </java>
    </target>

    <target name="ch11-ex2" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch11.example2.SwingTypeTester">
        </java>
    </target>

    <target name="ch11-ex3" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch11.example3.URLMonitorPanel">
            <arg value="${hostlist}"/>
        </java>
    </target>

    <target name="ch11-ex4" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch11.example4.URLMonitorPanel">
            <arg value="${hostlist}"/>
        </java>
    </target>

    <target name="ch12-ex1-server" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch12.example1.TypeServer">
            <arg value="${TypeServerPort}"/>
        </java>
    </target>

    <target name="ch12-ex1-client" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch12.example1.SwingTypeTester">
            <arg value="${TypeServerHost}"/>
            <arg value="${TypeServerPort}"/>
        </java>
    </target>

    <target name="ch12-ex2-server" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch12.example2.TypeServer">
            <arg value="${TypeServerPort}"/>
            <arg value="${TypeServerNThreads}"/>
        </java>
    </target>

    <target name="ch12-ex2-client" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch12.example2.SwingTypeTester">
            <arg value="${TypeServerHost}"/>
            <arg value="${TypeServerPort}"/>
        </java>
    </target>

    <target name="ch12-ex3-server" depends="compile_threads">
        <java fork="no" classpath="${classesDir}" classname="javathreads.examples.ch12.example3.TypeServer">
            <arg value="${TypeServerPort}"/>
        </java>
    </target>

    <target name="ch12-ex4-client" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch12.example4.CalcClient">
            <arg value="${CalcClientNThreads}"/>
            <arg value="${CalcServerFibNumber}"/>
            <arg value="${CalcServerHost}"/>
            <arg value="${CalcServerPort}"/>
        </java>
    </target>

    <target name="ch12-ex4-server" depends="compile_threads">
        <java fork="no" classpath="${classesDir}" classname="javathreads.examples.ch12.example4.CalcServer">
            <arg value="${CalcServerPort}"/>
            <arg value="${CalcServerNThreads}"/>
        </java>
    </target>

    <target name="ch12-ex5-client" depends="compile_threads">
        <java fork="no" classpath="${classesDir}" classname="javathreads.examples.ch12.example5.InterruptibleClient">
            <arg value="${TypeServerHost}"/>
            <arg value="${TypeServerPort}"/>
        </java>
    </target>

    <target name="ch13-ex1" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch13.TestOverride">
        </java>
    </target>

    <target name="ch13-ex2" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch13.TestOverrideThread">
        </java>
    </target>

    <target name="ch14-ex1" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch14.CollectionTest">
            <arg value="${nLoops}"/>
        </java>
    </target>

    <target name="ch14-ex2" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch14.AtomicTest">
            <arg value="${nLoops}"/>
            <arg value="${nThreads}"/>
        </java>
    </target>

    <target name="ch14-ex3" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch14.HashTest">
            <arg value="${nLoops}"/>
            <arg value="${nThreads}"/>
        </java>
    </target>

    <target name="ch14-ex4" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch14.CreateTest">
            <arg value="${nLoops}"/>
        </java>
    </target>

    <target name="ch15-ex1" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch15.example1.SinTable">
        </java>
    </target>

    <target name="ch15-ex2" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch15.example2.SinTable">
        </java>
    </target>

    <target name="ch15-ex3" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch15.example3.SinTable">
        </java>
    </target>

    <target name="ch15-ex4" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch15.example4.SinTable">
        </java>
    </target>

    <target name="ch15-ex5" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch15.example5.SinTable">
        </java>
    </target>

    <target name="ch15-ex6" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch15.example6.SinTable">
        </java>
    </target>

    <target name="ch15-ex7" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch15.example7.SinTable">
        </java>
    </target>

    <target name="ch15-ex8" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch15.example8.SinTable">
        </java>
    </target>

    <target name="ch15-ex9" depends="compile_threads">
        <java fork="yes" classpath="${classesDir}" classname="javathreads.examples.ch15.example9.SinTable">
        </java>
    </target>

    <target name="ch15-scale" depends="compile_threads">
        <java fork="no" classpath="${classesDir}" classname="javathreads.examples.ch15.ScaleTest">
            <arg value="${scaleLoops}"/>
            <arg value="${nRows}"/>
            <arg value="${nCols}"/>
            <arg value="${nThreads}"/>
            <arg value="${classname}"/>
        </java>
    </target>

</project>


