<?xml version="1.0" encoding="UTF-8"?>
<project default="distribute" name="distribute applet html">
  <description>usage: ant {task}
  </description>

  <!-- need these for auto creation of applet html files -->
  <property file="common.properties"/>
  <property file="appletHtmlCommon.properties"/>
  <property file="appletHtml_en.properties"/>
  <property file="appletHtml_de.properties"/>
  <property file="appletHtml_vi.properties"/>
  <property file="appletHtml_jp.properties"/>


  <target name="distribute"  depends="distributeImages, distributeSchemas, distributeJars"
          description="deploys the built jar files and generated html pages to the ${distributionGameDir} dir so they can be bulk copied to a website">

      <!--//////////////// auto generate the html based on the properties files ///////////////////-->
      <!-- there needs to be a separate set of html files for each locale.
           auto generate the index and applet html pages for all locales -->
      <foreach delimiter="," list="${appletHtml.localesList}" param="locale" target="create_html_for_locale">
         <param name="appletIndexFile" value="${appletIndexFile}"/>
         <param name="sourceDir" value="${sourceDir}"/>
         <param name="distributionDir" value="${distributionGameDir}"/>
      </foreach>

  </target>

  <target name="distributeJars"
          description="deploys jar files needed for running applets and web start applications">

      <!-- the class files are first put here so that we can create the jar, then removed -->
      <mkdir dir="${stagingDir}"/>

      <!-- copy the common jar needed for all applets. -->
      <copy todir="${distributionGameDir}">
        <fileset dir="${commonDir}/build/libs">
          <include name="bb4-common*.jar"/>
        </fileset>
      </copy>

      <!-- copy the ui jar needed for applets. -->
      <copy todir="${distributionGameDir}">
        <fileset dir="${uiDir}/build/libs">
          <include name="bb4-ui*.jar"/>
        </fileset>
      </copy>

      <!-- copy the ui jar needed for applets. -->
      <copy todir="${distributionGameDir}">
        <fileset dir="${soundDir}/build/libs">
          <include name="bb4-sound*.jar"/>
        </fileset>
      </copy>

      <!-- copy the optimization jar needed for many applets. -->
      <copy todir="${distributionGameDir}">
        <fileset dir="${optimizationDir}/build/libs">
          <include name="bb4-optimization*.jar"/>
        </fileset>
      </copy>

      <!-- copy the puzzle jars needed for puzzle applets. -->
      <copy todir="${distributionGameDir}">
        <fileset dir="${puzzleDir}/build/libs">
          <include name="bb4-*.jar"/>
        </fileset>
      </copy>

      <!-- copy the class files that are needed for simulation programs . Produces bb4-simulation.jar-->
      <copy todir="${stagingDir}">
          <fileset dir="${classesDir}">
            <include name="com/barrybecker4/simulation/common/**/*.class"/>
            <include name="com/barrybecker4/simulation/graphing/**/*.class"/>
          </fileset>
      </copy>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/bb4-simulation.jar"/>
      <delete dir="${stagingDir}/com"/>


      <!-- copy just the core class files that are needed for all the games. Produces bb4-gameCommon.jar -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/barrybecker4/game/common/**/*.class"/>
          <include name="com/barrybecker4/game/card/**/*.class"/>
          <include name="com/barrybecker4/game/*.xml"/>
          <exclude name="com/barrybecker4/game/**/test"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve hierarchy -->
      </copy>
      <antcall target="copyAllResources">
          <param name="componentDir" value="game/common"/>
      </antcall>
      <antcall target="copyResources">
        <param name="path" value="game"/>
        <param name="pattern" value="*.xml"/>
      </antcall>

      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/bb4-gameCommon.jar"/>
      <delete dir="${stagingDir}/com"/>

      <!-- copy just the core class files that are needed for all the twoplayer games. Produces bb4-game2Common.jar -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/twoplayer/common"/>
          <param name="jarFile" value="bb4-game2Common.jar"/>
      </antcall>

       <!-- copy just the core class files that are needed for all the multiplayer games. Produces bb4-multiPlayerCommon.jar -->
       <antcall target="deployJar">
          <param name="componentDir" value="game/multiplayer/common"/>
          <param name="jarFile" value="bb4-multiPlayerCommon.jar"/>
      </antcall>

      <!-- copy the class files that are needed for pente deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/twoplayer/pente"/>
          <param name="jarFile" value="pente.jar"/>
      </antcall>

       <!-- copy the class files that are needed for pente deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/twoplayer/tictactoe"/>
          <param name="jarFile" value="tictactoe.jar"/>
      </antcall>

      <!-- copy the class files that are needed for blockade deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/twoplayer/blockade"/>
          <param name="jarFile" value="blockade.jar"/>
      </antcall>

      <!-- copy the class files that are needed for checkers deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/twoplayer/checkers"/>
          <param name="jarFile" value="checkers.jar"/>
      </antcall>

      <!-- copy the class files that are needed for chess deployment -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/barrybecker4/game/twoplayer/checkers/**/*.class"/>
          <include name="com/barrybecker4/game/twoplayer/chess/**/*.class"/>
          <exclude name="com/barrybecker4/game/twoplayer/**/test"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve hierarchy -->
      </copy>
      <antcall target="copyAllResources">
          <param name="componentDir" value="game/twoplayer/chess"/>
      </antcall>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/chess.jar"/>
      <sleep milliseconds="${sleepTime}" />
      <delete dir="${stagingDir}/com"/>

      <!-- copy the class files that are needed for go deployment -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/barrybecker4/game/twoplayer/go/**/*.class"/>
          <exclude name="com/barrybecker4/game/twoplayer/go/**/test"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve hierarchy  -->
      </copy>
      <antcall target="copyAllResources">
          <param name="componentDir" value="game/twoplayer/go"/>
      </antcall>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/go.jar"/>
      <sleep milliseconds="${sleepTime}" />
      <delete dir="${stagingDir}/com"/>

      <!-- copy the class files that are needed for galactic empire deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/multiplayer/galactic"/>
          <param name="jarFile" value="galactic.jar"/>
      </antcall>

      <!-- copy the class files that are needed for Set deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/multiplayer/set"/>
          <param name="jarFile" value="set.jar"/>
      </antcall>

      <!-- copy the class files that are needed for poker game deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/multiplayer/poker"/>
          <param name="jarFile" value="poker.jar"/>
      </antcall>

      <!-- copy the class files that are needed for trivial game deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/multiplayer/trivial"/>
          <param name="jarFile" value="trivial.jar"/>
      </antcall>

      <!-- copy the class files that are needed for snake deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/snake"/>
          <param name="jarFile" value="snake.jar"/>
      </antcall>

      <!-- copy the class files that are needed for dice deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/dice"/>
          <param name="jarFile" value="dice.jar"/>
      </antcall>

      <!-- copy the class files that are needed for stock sim deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/stock"/>
          <param name="jarFile" value="stock.jar"/>
      </antcall>

      <!-- copy the class files that are needed for predprey sim deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/predprey"/>
          <param name="jarFile" value="predprey.jar"/>
      </antcall>

      <!-- copy the class files that are needed for habitat sim deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/habitat"/>
          <param name="jarFile" value="habitat.jar"/>
      </antcall>

      <!-- copy the class files that are needed for reaction diffusion deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/reactiondiffusion"/>
          <param name="jarFile" value="reactiondiffusion.jar"/>
      </antcall>

      <!-- copy the class files that are needed for fractalexplorer deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/fractalexplorer"/>
          <param name="jarFile" value="fractalexplorer.jar"/>
      </antcall>

      <!-- copy the class files that are needed for henonexplorer deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/henonphase"/>
          <param name="jarFile" value="henonexplorer.jar"/>
      </antcall>

      <!-- copy the class files that are needed for trebuchet deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/trebuchet"/>
          <param name="jarFile" value="trebuchet.jar"/>
      </antcall>

      <!-- copy the class files that are needed for liquid deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/liquid"/>
          <param name="jarFile" value="liquid.jar"/>
      </antcall>

      <!-- copy the class files that are needed for lsystem deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/lsystem"/>
          <param name="jarFile" value="lsystem.jar"/>
      </antcall>

      <!-- copy the class files that are needed for fluid deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/fluid"/>
          <param name="jarFile" value="fluid.jar"/>
      </antcall>

      <!-- copy the class files that are needed for spirograph deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="apps/spirograph"/>
          <param name="jarFile" value="spirograph.jar"/>
      </antcall>

      <!-- copy the class files that are needed for imagebreeder deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="apps/imagebreeder"/>
          <param name="jarFile" value="imagebreeder.jar"/>
      </antcall>

      <!-- copy the class files that are needed for sierpinski deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="apps/sierpinski"/>
          <param name="jarFile" value="sierpinski.jar"/>
      </antcall>

      <!-- some thirdparty libs needed by the applets. -->
      <copy file="../lib/vecmath.jar" tofile="${distributionGameDir}/vecmath.jar"/>
      <!--copy file="${libDir}/sun.jar" tofile="${distributionGameDir}/sun.jar"/-->
      <copy file="../lib/jai-codec-1.1.3.jar" tofile="${distributionGameDir}/jai-codec-1.1.3.jar"/>
      <copy file="../../imageproc/lib/jhlabs-1.0.2.jar" tofile="${distributionGameDir}/jhlabs-1.0.2.jar"/>
      <copy file="../lib/jigo-sgf-1.0.jar" tofile="${distributionGameDir}/jigo-sgf-1.0.jar"/>
  </target>     <!-- end distributeJars -->


  <target name="distributeImages" description="Copy image files to distrib dir">
      <mkdir dir="${distributionGameDir}"/>
      <copy todir="${distributionGameDir}">
        <fileset dir="${sourceDir}/images">
          <include name="**/*.jpg"/>
          <include name="**/*.png"/>
          <include name="**/*.gif"/>
        </fileset>

      </copy>
  </target>

  <target name="distributeSchemas" description="Copy xml schema (dtd, xsd) files to distrib dir">
      <mkdir dir="${distributionSchemaDir}"/>
      <copy todir="${distributionSchemaDir}">
        <fileset dir="${sourceDir}">
          <include name="**/*.dtd"/>
          <include name="**/*.xsd"/>
        </fileset>
        <mapper type="flatten"/>
      </copy>
  </target>


  <!-- /////////////////////////// helper tasks /////////////////////////////////// -->

  <target name="deployJar"
          description="Deploys the class files that are needed for Application/Applet deployment.">
      <copy todir="${stagingDir}">
          <fileset dir="${classesDir}">
              <include name="com/barrybecker4/${componentDir}/**/*.class"/>
              <exclude name="com/barrybecker4/${componentDir}/**/test/**/*.class"/>
          </fileset>
          <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve hierarchy -->
      </copy>
      <antcall target="copyAllResources">
          <param name="componentDir" value="${componentDir}"/>
      </antcall>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/${jarFile}"/>
      <delete dir="${stagingDir}/com"/>
  </target>

  <target name="copyAllResources">
      <antcall target="copyAudioResources">
          <param name="path" value="${componentDir}/ui/sounds"/>
      </antcall>
      <antcall target="copyImageResources">
          <param name="path" value="${componentDir}/ui/images"/>
      </antcall>
      <antcall target="copyResources">
          <param name="path" value="${componentDir}/resources"/>
          <param name="pattern" value="*.properties"/>
      </antcall>
      <antcall target="copyResources">
          <param name="path" value="${componentDir}/data"/>
          <param name="pattern" value="*.xml"/>
      </antcall>
  </target>

  <target name="copyAudioResources">
      <antcall target="copyResources">
          <param name="pattern" value="*.wav"/>
      </antcall>
      <antcall target="copyResources">
          <param name="pattern" value="*.au"/>
      </antcall>
      <antcall target="copyResources">
          <param name="pattern" value="*.mp3"/>
      </antcall>
  </target>

  <target name="copyImageResources">
      <antcall target="copyResources">
          <param name="pattern" value="*.gif"/>
      </antcall>
      <antcall target="copyResources">
          <param name="pattern" value="*.png"/>
      </antcall>
      <antcall target="copyResources">
          <param name="pattern" value="*.jpg"/>
      </antcall>
  </target>


  <target name="create_html_for_locale"
      description="deploys the all the html files for a specified locale. This includes the index page, javascript, and all the applet pages.">

      <!-- copy the class files that are needed for go deployment -->
      <copy todir="${distributionDir}/..">
        <fileset dir="${sourceDir}/html">
          <include name="*.js"/>
          <include name="*.css"/>
          <include name="*.gif"/>
        </fileset>
      </copy>

      <!--echo message="locale=${locale}"/-->
      <propertycopy from="appletHtml.${locale}.appletList" name="appletListForLocale"/>
      <propertycopy from="appletIndexFile.${locale}" name="appletIndexFileForLocale"/>
      <!--echo message="Generating Table: ${appletListForLocale}"/-->

      <!--echo message="copying ${sourceDir}/html/${appletIndexFile} to ${distributionDir}/../${appletIndexFileForLocale}"/-->
      <copy file="${sourceDir}/html/${appletIndexFile}" tofile="${distributionDir}/../${appletIndexFileForLocale}"/>

      <!-- top level locale specific replacements for the index file. -->
      <foreach delimiter="," list="${htmlindex.replacementList}" param="token" target="substitute_in_indexfile">
        <param name="item" value="appletHtml"/>
        <param name="replaceFile" value="${distributionDir}/../${appletIndexFileForLocale}"/>
      </foreach>

      <!-- create a TR entry for each applet -->
      <foreach delimiter="," list="${appletListForLocale}" param="token" target="tr_substitute">
        <param name="locale" value="${locale}"/>
        <param name="distributionDir" value="${distributionDir}/.."/>
      </foreach>

      <!-- low level replacements for each locale specific index file -->
      <foreach delimiter="," list="${appletListForLocale}" param="applet" target="substitute_for_indexfile">
        <param name="locale" value="${locale}"/>
        <param name="distributionDir" value="${distributionDir}/.."/>
      </foreach>

      <!-- instead of copying hand edited html and jnlps for each applet, I will generate them
      automatically from base templates and a properties file that specifies the substitutions
      to make.  -->
      <!--echo message="The applets to create files for are: ${appletListForLocale}"/-->

      <foreach delimiter="," list="${appletListForLocale}" param="appletName" target="create_applet_pages">
        <param name="locale" value="${locale}"/>
        <param name="sourceDir" value="${sourceDir}"/>
      </foreach>
  </target>


  <target name="create_applet_pages">
    <!--echo message="######### Now creating html and jnlp for : ${appletName}"/-->

    <!-- there are 2 web files for each app to make substitutions in -->
    <property name="suffices" value="html,jnlp"/>
    <foreach delimiter="," list="${suffices}" param="suffix" target="substitute_in_file">
      <param name="locale" value="${locale}"/>
      <param name="applet" value="${applet}"/>
      <param name="sourceDir" value="${sourceDir}"/>
    </foreach>

     <!-- use the correct codebase in the jnlp file  -->
     <replace file="${distributionDir}/${appletName}_${locale}.jnlp" token="{codebase}" value="${codebase}"/>

  </target>


  <target name="substitute_in_file">
    <propertycopy from="${suffix}.replacementList" name="replacementList"/>
    <!--echo message="${distributionDir}/${appletName}_${locale}.${suffix}::: ${suffix}.replacementList : ${replacementList}"/-->
    <copy file="${sourceDir}/html/applet_template.${suffix}" tofile="${distributionDir}/${appletName}_${locale}.${suffix}"/>

    <replace file="${distributionDir}/${appletName}_${locale}.${suffix}" token="{locale}" value="${locale}"/>

    <!-- now replace all the keys in this file -->
    <foreach delimiter="," list="${replacementList}" param="token" target="substitute">
      <param name="replaceFile" value="${distributionDir}/${appletName}_${locale}.${suffix}"/>
      <param name="applet" value="${appletName}"/>
    </foreach>
  </target>


  <target name="substitute_for_indexfile">
    <propertycopy from="htmlindexEntry.replacementList" name="replacementList"/>
    <propertycopy from="appletIndexFile.${locale}" name="appletIndexFileForLocale"/>
    <!-- now replace all the keys in this jnlp file -->
    <foreach delimiter="," list="${replacementList}" param="token" target="substitute_in_indexfile">
      <param name="locale" value="${locale}"/>
      <param name="replaceFile" value="${distributionDir}/${appletIndexFileForLocale}"/>
      <param name="item" value="${applet}"/>
    </foreach>
  </target>

  <target name="tr_substitute">
    <propertycopy from="appletIndexFile.${locale}" name="appletIndexFileForLocale"/>
    <property name="appName" value="${token}"/>
    <property name="TRTemplate"
        value="${TRTemplate1}${appName}.title${TRTemplate2}${appName}.longDescription${TRTemplate3}${appName}${TRTemplate4}${locale}${TRTemplate5}${appName}${TRTemplate6}${locale}${TRTemplate7}${appName}${TRTemplate7a}${locale}${TRTemplate7b}${appName}${TRTemplate8}${appName}.title${TRTemplate9}${appName}.title${TRTemplate10}"/>
    <!--echo message="****** TR Substitute ${TRTemplate} in file ${appletIndexFileForLocale}"/-->
    <replace file="${distributionDir}/${appletIndexFileForLocale}" token="{${token}TR}" value="${TRTemplate}"/>
  </target>

  <target name="substitute_in_indexfile" >
    <if>
       <isset property="${item}.${locale}.${token}"/>
       <then>
         <propertycopy from="${item}.${locale}.${token}" name="newValue"/>
       </then>
       <else>
          <echo message="Substitute default in indexFile ${token}"/>
          <propertycopy from="${token}" name="newValue"/>
       </else>
    </if>

    <!--echo message="Substitute ${newValue} for ${item}.${token} in ${replaceFile}"/-->
    <replace file="${replaceFile}" token="{${item}.${token}}" value="${newValue}"/>
  </target>


  <target name="substitute">
    <if>
       <isset property="${applet}.${locale}.${token}"/>
       <then>
         <propertycopy from="${applet}.${locale}.${token}" name="newValue" />
       </then>
       <else>
          <echo message="Substitute with default ${token}"/>
          <propertycopy from="${token}" name="newValue"/>
       </else>
    </if>
    <!--echo message="Substitute ${applet}.${locale}.${token} = ${newValue} for ${token} in ${replaceFile}"/-->
    <replace file="${replaceFile}" token="{${token}}" value="${newValue}"/>
  </target>

  <!-- copies specified files to both classes dir and staging dir -->
  <target name="copyResources">
    <!--echo message="copying ${path}"/-->
    <copy todir="${classesDir}">
      <fileset dir="${sourceDir}">
        <include name="com/barrybecker4/${path}/${pattern}"/>
      </fileset>
      <mapper from="${pattern}" to="${pattern}" type="glob"/>   <!-- preserve hierarchy -->
    </copy>
    <copy todir="${stagingDir}">
      <fileset dir="${sourceDir}">
        <include name="com/barrybecker4/${path}/${pattern}"/>
      </fileset>
      <mapper from="${pattern}" to="${pattern}" type="glob"/>   <!-- preserve hierarchy -->
    </copy>
  </target>

</project>