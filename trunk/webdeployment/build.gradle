// Copyright by Barry G. Becker, 2013. Licensed under MIT License: http://www.opensource.org/licenses/MIT

version = '1.0'

ext.distributionGameDir="$distributionDir/applets"
ext.distributionSchemaDir="$distributionDir/schema"

// Location of all the project related files.
// The environment variable PROJECT_HOME needs to be set to something like:
//    E:/projects/java_projects/trunk   (on Windows)   or
//    /windows/projects/java_projects/trunk (on Linux)
ext.project_home="$System.env.PROJECT_HOME"

// Location of java SDK
ext.java_home="$System.env.JAVA_HOME"


dependencies {
    compile project(':optimization')
    compile project(':sound')
    compile project(':imageproc')
    compile project(':puzzle')
    compile project(':game')
    compile project(':apps')
}

task showProperties(description: "shows some properties") << {
    println "Project: $project"
    println "Name: $name"
    println "Path: $path"
    println "Project directory: $projectDir"
    println "Build directory: $buildDir"
    println "Version: $version"
    println "Group: $project.group"
    println "Description: $project.description"
    println "AntBuilder: $ant"
    println "codebase: $codebase"
    println "distributionDir: $distributionDir"
    println "distributionGameDir: $distributionGameDir"
    println "projectHome: $project_home"
    println "projectHome: $uiDir"
}

clean.doLast {
    // project. is needed to disambiguate from the clean tasks existing delete.
    project.delete ("$distributionDir", "$stagingDir")
}


task deployImages(description: "Copy image files to $distributionGameDir")  {

    doLast {
        copy {
            from "$sourceDir/images"
            into "$distributionGameDir"
            include '**/*.jpg'
            include '**/*.png'
            include '**/*.gif'
        }
    }
}

task deploySchemas(description: "Copy schema files to $distributionDir") {

     doLast {
        copy {
            from fileTree("$project_home").files
            into "$distributionSchemaDir"
            include "**/*.dtd"
            include "**/*.xsd"
        }
     }
}

task deployJars(description: "Deploys jar files needed for running applets and web start applications") {

    doLast {
        println "deployJars to $distributionGameDir from $project_home"
        copy {
            from fileTree("$project_home").files
            into "$distributionGameDir"
            include "bb4-*.jar"
            include "jhlabs-1.0.3.jar"
            include "jigo-sgf-1.1.jar"
            //include "common/build/libs/bb4-common*.jar"
            //include "ui/build/libs/bb4-ui*.jar"
            //include "sound/build/libs/bb4-sound*.jar"
            //include "imageproc/build/libs/bb4-imageproc*.jar"
            //include "optimization/build/libs/bb4-optimization*.jar"
            //include "puzzle/build/libs/bb4-*.jar"
            //include "simulation/build/libs/bb4-*.jar"
            //include "game/build/libs/bb4-*.jar"
            //include "apps/build/libs/bb4-*.jar"
            //include "../imageproc/lib/jhlabs-1.0.3.jar"
            //include "../game/lib/jigo-sgf-1.1.jar"
        }
    }
}

task deploy(dependsOn: [deployImages, deploySchemas, deployJars],
            description: "Deploys all files  to $distributionGameDir so they can be bulk copied to a website") << {
    apply from: 'appletHtmlCommon.gradle'

    println "appletIndexFile: " + appletIndexFile
    println "appletHtml.localesList: " + appletHtml.localesList
    println "jnlp.replacementList=" + jnlp.replacementList
    println "doResize=" + doResize
    println "TRTemplate1=" + TRTemplate1
}
