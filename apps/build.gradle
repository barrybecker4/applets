// Copyright by Barry G. Becker, 2013. Licensed under MIT License: http://www.opensource.org/licenses/MIT

version = '1.2'
project.archivesBaseName = 'bb4-apps'
mainClassName = "com.barrybecker4.apps.spirograph.SpiroGraph"

// Suppress javadoc warning when using java 8.
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

task runImageBreeder(type: JavaExec, dependsOn: classes) {
    main = 'com.barrybecker4.apps.imagebreeder.ImageBreederApplet'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-ea", "-Xms512M", "-Xmx4G"]
}

task runSpirograph(type: JavaExec, dependsOn: classes) {
    main = 'com.barrybecker4.apps.spirograph.SpiroGraph'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-ea"]
}

task runSierpinski(type: JavaExec, dependsOn: classes) {
    main = 'com.barrybecker4.apps.sierpinski.SierpinskiApplet'
    classpath = sourceSets.main.runtimeClasspath
}

task runSimpleEditor(type: JavaExec, dependsOn: classes) {
    main = 'com.barrybecker4.apps.misc.sedit.SimpleEditorFrame'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-ea"]
}

task runNativeRender(type: JavaExec, dependsOn: classes) {
    main = 'com.barrybecker4.apps.misc.nativeRender.NativeTenderTest'
    classpath = sourceSets.main.runtimeClasspath
}

task runXMLViewer(type: JavaExec, dependsOn: classes) {
    main = 'com.barrybecker4.ui.xmlviewer.DomEcho'
    classpath = sourceSets.main.runtimeClasspath
    args = ['../apps/source/com/barrybecker4/apps/misc/yugioh/yugiohCards.xml']
}

task runXMLAppGenerator(type: JavaExec, dependsOn: classes) {
    main = 'com.barrybecker4.apps.aikido.AikidoAppGenerator'
    classpath = sourceSets.main.runtimeClasspath
    args = ['../apps/source/com/barrybecker4/apps/aikido/katate_dori.xml']
}

task runTranslator(type: JavaExec, dependsOn: classes) {
    main = 'com.barrybecker4.apps.translation.Translator'
    classpath = sourceSets.main.runtimeClasspath
}


task sierpinskiJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/apps/sierpinski/**'
    baseName = 'bb4-sierpinski'
}
task spirographJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/apps/spirograph/**'
    baseName = 'bb4-spirograph'
}
task imagebreederJar(type: Jar) {
    from sourceSets.main.output
    include 'com/barrybecker4/apps/imagebreeder/**'
    baseName = 'bb4-imagebreeder'
}


artifacts {
    archives sierpinskiJar
    archives spirographJar
    archives imagebreederJar

    archives sourcesJar
    archives javadocJar
}

dependencies {
    compile 'com.barrybecker4:bb4-sound:1.4-SNAPSHOT'
    compile 'com.barrybecker4:bb4-ui:1.4-SNAPSHOT'
    project(':imageproc')

    compile 'commons-collections:commons-collections:3.2'
    compile 'commons-codec:commons-codec:1.8'
    compile 'xerces:xercesImpl:2.3.0' //2.11.0'
    compile 'xml-apis:xml-apis:1.4.01' //2.0.2'

    // This did not work when I last tried, so downloaded the jar into libs
    //compile 'com.google.translate:google-api-translate-java:0.92'
    compile fileTree(dir: 'lib', include: 'google-api-translate-java-0.97.jar')
    compile project(':imageproc')
}

jar {
    // skip building the default jar that contains everything
    enabled = false
}
