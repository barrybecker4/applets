<?xml version="1.0" encoding="UTF-8"?>
<project default="distribute" name="distribute applet html">
  <description>usage: ant {task}
  </description>

  <!-- need these for auto creation of applet html files
      TODO: make default appletHtml.properties file that contains defaults and then have only overrides in other files.
   -->
  <property file="appletHtmlCommon.properties"/>
  <property file="appletHtml_en.properties"/>
  <property file="appletHtml_de.properties"/>
  <property file="appletHtml_vi.properties"/>
  <property file="appletHtml_jp.properties"/>


  <target name="distribute"  depends="distributeImages,distributeSchemas"
        description="deploys the built jar files and generated html pages to the ${distributionGameDir} dir so they can be bulk copied to a website">
      <mkdir dir="${stagingDir}"/>
      

      <!--/////////////////// create my jar files //////////////////////////////////////-->
      <!-- there are only one set of jar files for all locales -->
      <!-- copy the core class files that are needed for all my applets. Produces common.jar -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/common/**/*.class"/>
          <include name="com/becker/ui/**/*.class"/> 
          <include name="com/becker/xml/*.class"/> 
          <include name="com/becker/java2d/ImageUtil.class"/>
          <exclude name="com/becker/**/test"/>         
        </fileset>
        <!--mapper from="*.class" to="*.class" type="glob"/--> <!-- preserve hierarchy -->
      </copy>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/common.jar"/>
      <delete dir="${stagingDir}/com"/>
      
      <!-- copy the class files that are needed for programs that want to do optimization. Produces optimization.jar-->
      <antcall target="deployJar">
          <param name="componentDir" value="optimization"/>
          <param name="jarFile" value="optimization.jar"/>
      </antcall>
      
      <!-- copy the class files that are needed for programs that want to have sound. Produces sound.jar-->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/sound/*.class"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve hierarchy -->
      </copy>
      <antcall target="copyResources">
        <param name="path" value="sound"/>
        <param name="pattern" value="*.wav,*.au"/>
      </antcall>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/sound.jar"/>
      <delete dir="${stagingDir}/com"/>

      <!-- copy the class files that are needed for simulation programs . Produces simulation.jar-->
      <antcall target="deployJar">
          <param name="componentDir" value="simulation/common"/>
          <param name="jarFile" value="simulation.jar"/>
      </antcall>
   
      <!-- copy just the core class files that are needed for all the games. Produces gameCommon.jar -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/game/common/**/*.class"/>
          <include name="com/becker/game/card/**/*.class"/>
          <include name="com/becker/game/*.xml"/>
          <include name="com/becker/java2d/*Gradient*.class"/>          
          <exclude name="com/becker/game/**/test"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve hierarchy -->
      </copy>
      <antcall target="copyAllResources">
          <param name="componentDir" value="game/common"/>
      </antcall>
      <antcall target="copyResources">
        <param name="path" value="game"/>
        <param name="pattern" value="*.xml"/>
      </antcall>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/gameCommon.jar"/>
      <delete dir="${stagingDir}/com"/>
     
      <!-- copy just the core class files that are needed for all the twoplayer games. Produces game2Common.jar -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/twoplayer/common"/>
          <param name="jarFile" value="game2Common.jar"/>
      </antcall>
      
       <!-- copy just the core class files that are needed for all the multiplayer games. Produces gameMultiCommon.jar -->
       <antcall target="deployJar">
          <param name="componentDir" value="game/multiplayer/common"/>
          <param name="jarFile" value="gameMultiCommon.jar"/>
      </antcall>     
      
      <!-- copy the class files that are needed for pente deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/twoplayer/pente"/>
          <param name="jarFile" value="pente.jar"/>
      </antcall>
      
      <!-- copy the class files that are needed for blockade deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/twoplayer/blockade"/>
          <param name="jarFile" value="blockade.jar"/>
      </antcall>
    
      <!-- copy the class files that are needed for checkers deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/twoplayer/checkers"/>
          <param name="jarFile" value="checkers.jar"/>
      </antcall>
  
      <!-- copy the class files that are needed for chess deployment -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/game/twoplayer/checkers/**/*.class"/>
          <include name="com/becker/game/twoplayer/chess/**/*.class"/>
          <exclude name="com/becker/game/twoplayer/**/test"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve hierarchy -->
      </copy>
      <antcall target="copyAllResources">
          <param name="componentDir" value="game/twoplayer/chess"/>
      </antcall>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/chess.jar"/>
      <sleep milliseconds="${sleepTime}" />
      <delete dir="${stagingDir}/com"/>

      <!-- copy the class files that are needed for go deployment -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/game/twoplayer/go/**/*.class"/>
          <include name="ca/dj/jigo/sgf/*.class"/>
          <include name="ca/dj/jigo/sgf/tokens/*.class"/>
          <exclude name="com/becker/game/twoplayer/go/**/test"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve hierarchy -->
      </copy>     
      <antcall target="copyAllResources">
          <param name="componentDir" value="game/twoplayer/go"/>
      </antcall>      
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/go.jar"/>
      <sleep milliseconds="${sleepTime}" />
      <delete dir="${stagingDir}/com"/>
      <delete dir="${stagingDir}/ca"/>
      
      <!-- copy the class files that are needed for galactic empire deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/multiplayer/galactic"/>
          <param name="jarFile" value="galactic.jar"/>
      </antcall>
     
      <!-- copy the class files that are needed for Set deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/multiplayer/set"/>
          <param name="jarFile" value="set.jar"/>
      </antcall>
  
      <!-- copy the class files that are needed for poker game deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="game/multiplayer/poker"/>
          <param name="jarFile" value="poker.jar"/>
      </antcall>
            
      <!-- copy the class files that are needed for puzzle deployment -->
      <antcall target="deployJar">
          <param name="componentDir" value="puzzle/common"/>
          <param name="jarFile" value="puzzle.jar"/>
      </antcall>      
    
      <!-- copy the class files that are needed for maze deployment -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/puzzle/maze/*.class"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve directory hierarchy -->
      </copy>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/maze.jar"/>
      <delete dir="${stagingDir}/com"/>
    
      <!-- copy the class files that are needed for snake deployment -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/simulation/snake/*.class"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve directory hierarchy -->
      </copy>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/snake.jar"/>
      <delete dir="${stagingDir}/com"/>
    
      <!-- copy the class files that are needed for reaction diffusion deployment -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/simulation/reactiondiffusion/*.class"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve directory hierarchy -->
      </copy>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/reactiondiffusion.jar"/>
      <delete dir="${stagingDir}/com"/>
      
      <!-- copy the class files that are needed for trebuchet deployment -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/simulation/trebuchet/*.class"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve directory hierarchy -->
      </copy>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/trebuchet.jar"/>
      <delete dir="${stagingDir}/com"/>
      
      <!-- copy the class files that are needed for spirograph deployment -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/spirograph/*.class"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve hierarchy -->
      </copy>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/spirograph.jar"/>
      <delete dir="${stagingDir}/com"/>
      
      <!-- copy the class files that are needed for redpuzzle deployment -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/puzzle/redpuzzle/*.class"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve directory hierarchy -->
      </copy>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/redpuzzle.jar"/>
      <sleep milliseconds="${sleepTime}" />
      <delete dir="${stagingDir}/com"/>
      
      <!-- copy the class files that are needed for sudoku deployment -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/puzzle/sudoku/*.class"/>
          <include name="com/becker/puzzle/sudoku/*/*.class"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve directory hierarchy -->
      </copy>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/sudoku.jar"/>
      <sleep milliseconds="${sleepTime}" />
      <delete dir="${stagingDir}/com"/>
      
      <!-- copy the class files that are needed for hiq deployment -->
      <copy todir="${stagingDir}">
        <fileset dir="${classesDir}">
          <include name="com/becker/puzzle/hiq/*.class"/>
        </fileset>
        <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve directory hierarchy -->
      </copy>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/hiq.jar"/>
      <sleep milliseconds="${sleepTime}" />
      <delete dir="${stagingDir}/com"/>

      <copy file="${libDir}/vecmath.jar" tofile="${distributionGameDir}/vecmath.jar"/>
      <copy file="${libDir}/sun.jar" tofile="${distributionGameDir}/sun.jar"/>
      <copy file="${libDir}/jai_codec.jar" tofile="${distributionGameDir}/jai_codec.jar"/>


      
      <!--//////////////// auto generate the html based on the properties files ///////////////////-->
      <!-- there needs to be a separate set of html files for each locale. -->

      <!-- auto generate the index and applet html pages for all locales -->
      <foreach delimiter="," list="${appletHtml.localesList}" param="locale" target="create_html_for_locale">
         <param name="appletIndexFile" value="${appletIndexFile}"/>
         <param name="sourceDir" value="${sourceDir}"/>
         <param name="distributionDir" value="${distributionGameDir}"/>
      </foreach>

  </target>


  <target name="distributeImages" description="Copy image files to distrib dir">
    <mkdir dir="${distributionGameDir}"/>
      <copy todir="${distributionGameDir}">
        <fileset dir="${sourceDir}/images">
          <include name="*.jpg"/>
          <include name="*.png"/>
          <include name="*.gif"/>
        </fileset>
      </copy>
  </target>

  <target name="distributeSchemas" description="Copy xml schema (dtd, xsd) files to distrib dir">
      <mkdir dir="${distributionSchemaDir}"/>
      <copy todir="${distributionSchemaDir}">
        <fileset dir="${sourceDir}">
          <include name="**/*.dtd"/>
          <include name="**/*.xsd"/>
        </fileset>
        <mapper type="flatten"/>
      </copy>
  </target>


  <!-- /////////////////////////// helper tasks /////////////////////////////////// -->  

  <target name="deployJar"
          description="Deploys the class files that are needed for Application/Applet deployment.">
      <copy todir="${stagingDir}">
          <fileset dir="${classesDir}">
              <include name="com/becker/${componentDir}/**/*.class"/>
              <exclude name="com/becker/${componentDir}/**/test"/>
          </fileset>
          <mapper from="*.class" to="*.class" type="glob"/> <!-- preserve hierarchy -->
      </copy>
      <antcall target="copyAllResources">
          <param name="componentDir" value="${componentDir}"/>
      </antcall>
      <jar basedir="${stagingDir}" compress="true" destfile="${distributionGameDir}/${jarFile}"/>
      <delete dir="${stagingDir}/com"/>
  </target>
  
       
  <target name="copyAllResources">
      <antcall target="copyResources">
          <param name="path" value="${componentDir}/ui/images"/>
          <param name="pattern" value="*.gif"/>
      </antcall>
      <antcall target="copyResources">
          <param name="path" value="${componentDir}/ui/images"/>
          <param name="pattern" value="*.png"/>
      </antcall>
      <antcall target="copyResources">
          <param name="path" value="${componentDir}/resources"/>
          <param name="pattern" value="*.properties"/>
      </antcall>
  </target>
  
  <target name="create_html_for_locale"
      description="deploys the all the html files for a specified locale. This includes the index page and all the applet pages.">

      <echo message="locale=${locale}"/>
      <propertycopy from="appletHtml.${locale}.appletList" name="appletListForLocale"/>
      <propertycopy from="appletIndexFile.${locale}" name="appletIndexFileForLocale"/>
      <echo message="Generating Table: ${appletListForLocale}"/>

      <echo message="copying ${sourceDir}/html/${appletIndexFile} to ${distributionDir}/../${appletIndexFileForLocale}"/>
      <copy file="${sourceDir}/html/${appletIndexFile}" tofile="${distributionDir}/../${appletIndexFileForLocale}"/>


      <!-- top level locale specific replacements for the index file. -->
      <foreach delimiter="," list="${htmlindex.replacementList}" param="token" target="substitute_in_indexfile">
        <param name="item" value="appletHtml"/>
        <param name="replaceFile" value="${distributionDir}/../${appletIndexFileForLocale}"/>
      </foreach>

      <!-- create a TR entry for each applet -->
      <foreach delimiter="," list="${appletListForLocale}" param="token" target="tr_substitute">
        <param name="locale" value="${locale}"/>
        <param name="distributionDir" value="${distributionDir}/.."/>
      </foreach>

      <!-- low level replacements for each locale specific index file -->
      <foreach delimiter="," list="${appletListForLocale}" param="applet" target="substitute_for_indexfile">
        <param name="locale" value="${locale}"/>
        <param name="distributionDir" value="${distributionDir}/.."/>
      </foreach>

      <!-- instead of copying hand edited html and jnlps for each applet, I will generate them
      automatically from base templates and a properties file that specifies the substitutions
      to make.  -->
      <echo message="The applets to create files for are: ${appletListForLocale}"/>

      <foreach delimiter="," list="${appletListForLocale}" param="appletName" target="create_applet_pages">
        <param name="locale" value="${locale}"/>
        <param name="sourceDir" value="${sourceDir}"/>
      </foreach>
  </target>


  <target name="create_applet_pages">
    <echo message="######### Now creating html and jnlp for : ${appletName}"/>

    <!-- there are 2 web files for each app to make substitutions in -->
    <property name="suffices" value="html,jnlp"/>
    <foreach delimiter="," list="${suffices}" param="suffix" target="substitute_for_file">
      <param name="locale" value="${locale}"/>
      <param name="applet" value="${appletName}"/>
      <param name="sourceDir" value="${sourceDir}"/>
    </foreach>
  </target>


  <target name="substitute_for_file">
    <propertycopy from="${suffix}.replacementList" name="replacementList"/>
    <echo message="${distributionDir}/${appletName}_${locale}.${suffix}::: ${suffix}.replacementList : ${replacementList}"/>
    <copy file="${sourceDir}/html/applet_template.${suffix}" tofile="${distributionDir}/${appletName}_${locale}.${suffix}"/>

    <replace file="${distributionDir}/${appletName}_${locale}.${suffix}" token="{locale}" value="${locale}"/>

    <!-- now replace all the keys in this jnlp file -->
    <foreach delimiter="," list="${replacementList}" param="token" target="substitute">
      <param name="replaceFile" value="${distributionDir}/${appletName}_${locale}.${suffix}"/>
      <param name="applet" value="${appletName}"/>
    </foreach>
  </target>


  <target name="substitute_for_indexfile">
    <propertycopy from="htmlindexEntry.replacementList" name="replacementList"/>
    <propertycopy from="appletIndexFile.${locale}" name="appletIndexFileForLocale"/>
    <!-- now replace all the keys in this jnlp file -->
    <foreach delimiter="," list="${replacementList}" param="token" target="substitute_in_indexfile">
      <param name="locale" value="${locale}"/>
      <param name="replaceFile" value="${distributionDir}/${appletIndexFileForLocale}"/>
      <param name="item" value="${applet}"/>
    </foreach>
  </target>


  <target name="substitute_in_indexfile">
    <propertycopy from="${item}.${locale}.${token}" name="newValue"/>
    <!--echo message="Substitute ${newValue} for ${applet}.${token} in ${replaceFile}"/-->
    <replace file="${replaceFile}" token="{${item}.${token}}" value="${newValue}"/>
  </target>


  <target name="tr_substitute">
    <propertycopy from="appletIndexFile.${locale}" name="appletIndexFileForLocale"/>
    <property name="appName" value="${token}"/>
    <property name="TRTemplate"
        value="${TRTemplate1}${appName}.title${TRTemplate2}${appName}.longDescription${TRTemplate3}${appName}${TRTemplate4}${locale}${TRTemplate4a}${appName}.title${TRTemplate5}${appName}${TRTemplate6}${locale}${TRTemplate6a}${appName}.title${TRTemplate7}${appName}${TRTemplate7a}${locale}${TRTemplate7b}${appName}${TRTemplate8}${appName}.title${TRTemplate9}${appName}.title${TRTemplate10}"/>
    <!--echo message="****** TR Substitute ${TRTemplate} in file ${appletIndexFileForLocale}"/-->
    <replace file="${distributionDir}/${appletIndexFileForLocale}" token="{${token}TR}" value="${TRTemplate}"/>
  </target>


  <target name="substitute">
    <propertycopy from="${applet}.${locale}.${token}" name="newValue"/>
    <!--echo message="Substitute ${token} for ${applet}.${locale}.${token} = ${newValue} in ${replaceFile}"/-->
    <replace file="${replaceFile}" token="{${token}}" value="${newValue}"/>
  </target>


  <!-- copies specified files to both classes dir and staging dir -->
  <target name="copyResources">
    <echo message="copying ${path}"/>
    <copy todir="${classesDir}">
      <fileset dir="${sourceDir}">
        <include name="com/becker/${path}/${pattern}"/>
      </fileset>
      <mapper from="${pattern}" to="${pattern}" type="glob"/>   <!-- preserve hierarchy -->
    </copy>
    <copy todir="${stagingDir}">
      <fileset dir="${sourceDir}">
        <include name="com/becker/${path}/${pattern}"/>
      </fileset>
      <mapper from="${pattern}" to="${pattern}" type="glob"/>   <!-- preserve hierarchy -->
    </copy>
  </target>
  
</project>